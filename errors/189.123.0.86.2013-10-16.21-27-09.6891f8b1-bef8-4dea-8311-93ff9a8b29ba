(dp1
S'output'
p2
S"<type 'exceptions.RuntimeError'> Cannot compare processo.criado_em < None"
p3
sS'layer'
p4
S'/home/jbtte/web2py/applications/tjdf/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: latin1 -*-\n\ndef index():\n   \n    form = SQLFORM.factory(Field(\'processo\', label=T(\'Numero do Processo: \')))\n    \n    if form.process().accepted:      \n        import tj\n        processo = tj.get_page(form.vars.processo)\n        session.reu = processo[0].decode("latin1", "ignore")\n        session.classe = processo[1].decode("latin1", "ignore")\n        session.numero = processo[2]\n        session.crime = processo[3].decode("latin1", "ignore")\n        session.competencia = processo[4]\n        redirect(URL(\'cadastro\'))\n\n    return dict(form=form)\n    \n@auth.requires_login()\ndef cadastro():\n    \n    ##creating the submission form and hidding the date and user, which are filled in automatically\n    db.processo.criado_em.writable = False \n    db.processo.criado_em.readable = False \n    db.processo.user.writable = False \n    db.processo.user.readable = False \n    form = SQLFORM(db.processo)\n    ##pre-populating the form with the info obtained through get_page()\n    form.vars.classe = session.classe.encode("utf8")\n    form.vars.reu = session.reu.encode("utf8")\n    form.vars.numero = session.numero\n    form.vars.competencia = session.competencia.encode("utf8")\n    form.vars.crime = session.crime.encode("utf8")\n    \n    if form.process().accepted:\n       session.flash = \'form accepted\'\n       redirect(URL(\'index\'))\n       \n    return dict(form=form)\n\ndef pesquisa():\n    form = SQLFORM.factory(Field(\'reu\'),\n    Field(\'numero\'),\n    Field(\'competencia\'),\n    Field(\'Data_inicial\', \'date\'),\n    Field(\'Data_final\', \'date\', default = request.now))\n    \n    if form.process().accepted:\n        \n        if form.vars.numero!="":\n            numero = db.processo.numero.contains(form.vars.numero)\n            query = db(numero)\n            session.rows = query.select()\n            redirect(URL(\'result\'))\n        \n        elif form.vars.reu != "":\n            reu = db.processo.reu.contains(form.vars.reu)\n            query = db(reu)\n            session.rows = query.select()\n            redirect(URL(\'result\'))\n            \n            \n        elif form.vars.competencia != "":\n            competencia = db.processo.competencia == form.vars.competencia\n            query = db(competencia)\n            session.rows = query.select()\n            redirect(URL(\'result\'))\n            \n            \n        elif (form.vars.Data_inicial!="") or (form.vars.Data_final!=request.now):\n            \n            #if form.vars.Data_inicial == "":\n             #   form.vars.Data_inicia = date(date_of_day-60)\n            data = (db.processo.criado_em > form.vars.Data_inicial) and (db.processo.criado_em < form.vars.Data_final)\n            query = db(data) \n            session.rows = query.select()\n            redirect(URL(\'result\'))   \n    \n    \n    #competencia = db.processo.competencia == "Revisora"\n    #rows = query.select()\n\n    return dict(form=form)\n\ndef result():\n    return dict(rows=session.rows)\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in \n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\nresponse._vars=response._caller(pesquisa)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/jbtte/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/jbtte/web2py/applications/tjdf/controllers/default.py", line 105, in <module>\n  File "/home/jbtte/web2py/gluon/globals.py", line 194, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/jbtte/web2py/applications/tjdf/controllers/default.py", line 76, in pesquisa\n    session.rows = query.select()\n  File "/home/jbtte/web2py/gluon/dal.py", line 9958, in select\n    return adapter.select(self.query,fields,attributes)\n  File "/home/jbtte/web2py/gluon/dal.py", line 2245, in select\n    return super(SQLiteAdapter, self).select(query, fields, attributes)\n  File "/home/jbtte/web2py/gluon/dal.py", line 1691, in select\n    sql = self._select(query, fields, attributes)\n  File "/home/jbtte/web2py/gluon/dal.py", line 1601, in _select\n    sql_w = \' WHERE \' + self.expand(query) if query else \'\'\n  File "/home/jbtte/web2py/gluon/dal.py", line 1368, in expand\n    return op(first,**optional_args)\n  File "/home/jbtte/web2py/gluon/dal.py", line 1286, in LT\n    raise RuntimeError("Cannot compare %s < None" % first)\nRuntimeError: Cannot compare processo.criado_em < None\n'
p11
s.